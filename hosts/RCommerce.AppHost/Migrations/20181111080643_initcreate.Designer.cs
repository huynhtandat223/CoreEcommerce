// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RCommerce.Module.Core.Data;

namespace RCommerce.AppHost.Migrations
{
    [DbContext(typeof(RDbContext))]
    [Migration("20181111080643_initcreate")]
    partial class initcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RCommerce.Module.Core.Models.AppSetting", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Module");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Core_AppSetting");
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(350);

                    b.Property<int>("ParentId");

                    b.Property<string>("ParentName")
                        .HasMaxLength(350);

                    b.Property<string>("SKUPrefix")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Products_Category");

                    b.HasData(
                        new { Id = 1, Name = "Category 1", ParentId = 0, SKUPrefix = "C1" },
                        new { Id = 2, Name = "Category 2", ParentId = 0, SKUPrefix = "C2" },
                        new { Id = 3, Name = "Category 3", ParentId = 1, ParentName = "Category 1", SKUPrefix = "C3" },
                        new { Id = 4, Name = "Category 4", ParentId = 1, ParentName = "Category 1", SKUPrefix = "C4" },
                        new { Id = 5, Name = "Category 5", ParentId = 2, ParentName = "Category 2", SKUPrefix = "C5" },
                        new { Id = 6, Name = "Category 6", ParentId = 3, ParentName = "Category 3", SKUPrefix = "C6" }
                    );
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasMaxLength(350);

                    b.Property<int>("Position")
                        .HasMaxLength(350);

                    b.Property<string>("SourceUrl")
                        .HasMaxLength(350);

                    b.HasKey("Id");

                    b.ToTable("Products_Image");
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("CreatedUser");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsInStock");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<double?>("OriginalPrice");

                    b.Property<string>("OriginalUrl")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductNote");

                    b.Property<int?>("QtyOnHand");

                    b.Property<double?>("RegularPrice");

                    b.Property<string>("SKU")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.ToTable("Products_Product");
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CategoryId");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products_ProductCategory");
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.ProductImage", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("ImageId");

                    b.HasKey("ProductId", "ImageId");

                    b.HasIndex("ImageId");

                    b.ToTable("Products_ProductImage");
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.ProductOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Products_ProductOption");
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.ProductOptionValue", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("OptionId");

                    b.Property<int>("ProductOptionValudeDefaultId");

                    b.Property<string>("Value");

                    b.HasKey("ProductId", "OptionId", "ProductOptionValudeDefaultId");

                    b.HasIndex("OptionId");

                    b.ToTable("Products_ProductOptionValue");
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.ProductOptionValueDefault", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OptionId");

                    b.Property<int>("SortOrder");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.ToTable("Products_ProductOptionValueDefault");
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.ProductCategory", b =>
                {
                    b.HasOne("RCommerce.Module.Products.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RCommerce.Module.Products.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.ProductImage", b =>
                {
                    b.HasOne("RCommerce.Module.Products.Models.Image", "Image")
                        .WithMany("ProductImages")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RCommerce.Module.Products.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.ProductOptionValue", b =>
                {
                    b.HasOne("RCommerce.Module.Products.Models.ProductOption", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RCommerce.Module.Products.Models.Product", "Product")
                        .WithMany("ProductOptionValues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("RCommerce.Module.Products.Models.ProductOptionValueDefault", b =>
                {
                    b.HasOne("RCommerce.Module.Products.Models.ProductOption", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
